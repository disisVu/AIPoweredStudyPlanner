version: 2.1
orbs:
  node: circleci/node@5

jobs:
  build-frontend:
    executor: node/default
    working_directory: ~/project/frontend
    steps:
      - checkout:
          path: ~/project
      - run:
          name: Install frontend dependencies
          command: npm install
      - restore_cache:
          keys:
            - v1-frontend-{{ checksum "package.json" }}
      - save_cache:
          paths:
            - ~/project/frontend/node_modules
          key: v1-frontend-{{ checksum "package.json" }}
      - run:
          name: Build frontend
          command: npm run build
      - store_artifacts:
          path: ~/project/frontend/dist
          destination: frontend-build

  build-backend:
    executor: node/default
    working_directory: ~/project/backend
    steps:
      - checkout:
          path: ~/project
      - run:
          name: Install backend dependencies
          command: npm install
      - restore_cache:
          keys:
            - v1-backend-{{ checksum "package.json" }}
      - save_cache:
          paths:
            - ~/project/backend/node_modules
          key: v1-backend-{{ checksum "package.json" }}
      - run:
          name: Build backend
          command: npm run build

  deploy-vercel:
    docker:
      - image: node:18-alpine3.21
    steps:
      - checkout
      - run:
          name: Install Vercel CLI
          command: npm install -g vercel
      - run:
          name: Deploy to Vercel
          command: |
            vercel --token $VERCEL_TOKEN --prod

  deploy-render:
    docker:
      - image: curlimages/curl
    steps:
      - run:
          name: Deploy to Render
          command: |
            curl -X POST \
              -H "Authorization: Bearer $RENDER_API_KEY" \
              -H "Content-Type: application/json" \
              -d '{"serviceId":"${RENDER_SERVICE_ID}"}' \
              https://api.render.com/v1/deploys

workflows:
  build-and-test:
    jobs:
      - build-frontend
      - build-backend
